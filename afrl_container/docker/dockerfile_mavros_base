# Base Image for AFRL production uses Nvida ROS bases 
FROM nvidia_ros:latest
SHELL ["/bin/bash", "-c"]

# Install basic apt packages
RUN apt-get update && apt-get install -y \
  cmake \
  g++ \
  git \
  gnupg gnupg1 gnupg2 \
  libcanberra-gtk* \
  python3-catkin-tools \
  python3-pip \
  python3-tk \
  wget

# Install MAVROS and some other dependencies for later
RUN apt-get update && apt-get install -y ros-noetic-mavros ros-noetic-mavros-extras ros-noetic-mavros-msgs vim wget screen

# Dependency from https://github.com/mavlink/mavros/blob/master/mavros/README.md
RUN wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh
RUN chmod +x install_geographiclib_datasets.sh
RUN ./install_geographiclib_datasets.sh

# Create Catkin workspace package and install mavros
RUN mkdir -p /catkin_ws/src \
 && cd /catkin_ws/src \
 && source /opt/ros/noetic/setup.bash \
 && catkin_init_workspace 
 RUN source /opt/ros/noetic/setup.bash \
 && cd /catkin_ws \
 && catkin build -j4

# Installs for building rqt_py_trees from source
# (Once bug is fixed, replace with apt-get install ros-noetic-rqt-py-trees)
RUN apt-get install -y graphviz graphviz-dev
RUN pip3 install pygraphviz

# Build the base Catkin workspace
RUN pip3 install osrf-pycommon
RUN cd /catkin_ws \
 && source /opt/ros/noetic/setup.bash \
 && rosdep install -y --from-paths src --ignore-src \
 && catkin build -j4

# Remove display warnings
RUN mkdir /tmp/runtime-root
ENV XDG_RUNTIME_DIR "/tmp/runtime-root"
ENV NO_AT_BRIDGE 1

# Set up the work directory and entrypoint
WORKDIR /catkin_ws
#COPY ./docker/entrypoint.sh /
COPY ./docker/entrypoint.sh /
ENTRYPOINT [ "/entrypoint.sh" ]
